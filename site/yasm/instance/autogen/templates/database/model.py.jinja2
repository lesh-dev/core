{% macro options(field) %}
{% if field.options.autoincrement %}
autoincrement=True,
{% endif %}
{% if field.options.nullable %}
nullable=True,
{% endif %}
{% endmacro %}
{% if message.options.searchable %}
@add_search
{% endif %}
class {{ message.name }}(db.Model):
    __tablename__ = '{{ message.table_name }}'
{% for field in message.primary_fields %}
    {{ field.name }} = db.Column(
        db.{{ field.py_db_type }},
        name='{{ field.name }}',
        primary_key=True,
        {{ options(field) }}
    )
{% endfor %}
{% for field in message.regular_fields %}
    {{ field.name }} = db.Column(
        db.{{ field.py_db_type }},
        name='{{ field.name }}',
        {{ options(field) }}
    )
{% endfor %}
{% for relationship in message.relationships.values() %}
    {{ relationship.name }} = db.relationship(
        '{{ relationship.model.name }}',
{% if relationship.back_repeated %}
        uselist=True,
{% else %}
        uselist=False,
{% endif %}
{% if relationship.fields %}
        foreign_keys=[
{% for field in relationship.fields %}
            {{ field.name }},
{% endfor %}
        ],
{% endif %}
        back_populates='{{ relationship.back_populates.name }}',
    )
{% endfor %}
    __table_args__ = (
{% for relationship in message.relationships.values() if relationship.fields %}
        db.ForeignKeyConstraint(
            (
{% for field in relationship.fields %}
                {{ field.name }},
{% endfor %}
            ),
            (
{% for field in relationship.fields %}
                '{{ relationship.model.table_name }}.{{ field.back_populates }}',
{% endfor %}
            ),
        ),
{% endfor %}
    )

