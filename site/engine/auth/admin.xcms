<?php
    require_once("${engine_dir}sys/auth.php");
    require_once("${engine_dir}sys/groups.php");
    require_once("${engine_dir}auth/user.php");
    require_once("${engine_dir}auth/format.php");
?><# auth/ #admin #><?php

    $u = xcms_user();
    $target_user = xcms_get_key_or($_GET, "user");
    if (@$_POST["create_user"])
    {
        // switch to user modification form
        $target_user = $_POST["login"];
    }

    function xcmst_draw_user_list($u, $target_user)
    {
        global $preface;
        ?>
        <div>
        <div style="padding-bottom: 5px">
            <a class="h-menu-link" href="?action=create_user<?php echo $preface;?>">Создать пользователя</a>
        </div>
        <?php
            $uid = 0;
            foreach($u->user_list() as $login)
            {
                $activeness = ($login == $target_user) ? "menu-active" : "";
                $oddity = ($uid % 2 != 0) ? "odd" : "";
                $user = $u->su($login);
                $name = htmlspecialchars($user->param("name"));
                $email = htmlspecialchars($user->param("email"));
                ?>
                <a class="user-list <?php echo $activeness.' '.$oddity; ?>" href="?user=<?php echo $login.$preface; ?>"><span
                    class="user-login" id="uid-<?php echo $uid; ?>"><?php echo $login; ?></span><span
                    class="user-login" id="uname-<?php echo $uid; ?>"><?php echo $name; ?></span><span
                    class="user-login" id="uemail-<?php echo $uid; ?>"><?php echo $email; ?></span><span
                    id="urights-<?php echo $uid; ?>"><?php xcmst_draw_privileges($user, XDP_COMPACT); ?></span>
                    </a><?php
                $uid++;
            }
        ?>
        </div><?php
    }

    function xcmst_draw_user_create_form()
    {
        global $preface;
        ?>
        <form method="post" action="?<?php echo $preface; ?>" >
            <h3>Учётные данные</h3>
            <div><span class="user-label">Логин</span> <input <?php xcmst_input_attrs_from_post("login", "vasya-pupkin"); ?> /></div>
            <div><span class="user-help-label">Разрешены латинские буквы, цифры,
                а также дефис (-), подчёркивание (_), точка (.) и собака (@)</span></div>
            <div><span class="user-label">Пароль</span>
                <input type="password" <?php xcmst_input_attrs_from_post("password", 'Sup3r-P@ssw0rd'); ?>/></div>
            <div><span class="user-help-label">Если не указан, будет сгенерирован автоматически</span></div>
            <div><span class="user-label">Пароль (ещё раз)</span>
                <input type="password" <?php xcmst_input_attrs_from_post("password_confirm"); ?> /></div>
            <div><span class="user-label">Настоящее имя</span>
                <input <?php xcmst_input_attrs_from_post("name", "Вася Пупкин"); ?> /></div>
            <div><span class="user-label">EMail</span>
                <input <?php xcmst_input_attrs_from_post("email", "user@example.com"); ?> /></div>
            <div><span class="user-label">Оповестить пользователя</span>
                <input type="hidden" name="notify_user" id="notify_user-fake" value="" /><!--
                prepend fake input with empty value to submit it as checkbox 'unchecked' value
                See http://iamcam.wordpress.com/2008/01/15/unchecked-checkbox-values/ -->
                <input type="checkbox" <?php xcmst_checkbox_attrs_from_post("notify_user", YES); ?> /></div>
            <?php
            xcmst_draw_privileges(NULL);
            ?>
            <input type="submit" name="create_user" value="Создать пользователя" />
        </form><?php
    }

    function xcmst_draw_user_modify_form($u, $target_user)
    {
        if (empty($target_user))
        {
            echo "<b>Выберите пользователя в меню слева</b>";
            return;
        }
        $user = $u->su($target_user);
        $creation_date = xcms_datetime($user->param('creation_date'));
        $read_only = ($u->login() == $user->login());
        ?>
        <form method="post">
        <h3>Учётные данные</h3>

        <div><span class="user-label">Логин</span><span id="login-span"><?php echo $user->login(); ?></span></div>
        <div><span class="user-label">Создал</span><?php echo $user->param('creator').", $creation_date"; ?></div>

        <div><span class="user-label">Настоящее имя</span><input
            <?php xcmst_input_attrs_from_user($user, 'name', $read_only, "Вася Пупкин"); ?> /></div>

        <div><span class="user-label">EMail</span><input
            <?php xcmst_input_attrs_from_user($user, 'email', $read_only, "user@example.com"); ?> /></div>
        <?php
        xcmst_draw_privileges($user, $read_only ? XDP_READONLY : XDP_NORMAL);
        if ($read_only)
        {?>
            <div style="padding-top: 10px">Свой собственный профиль Вы можете отредактировать
            <a <?php echo xcms_href(array('mode'=>'myprofile', 'ref'=>'ladmin')); ?> >здесь</a>.</div><?php
        }
        else
        {?>
            <input name="update_user" id="update_user" value="Обновить данные пользователя" type="submit" />
            <input name="check_delete_user" id="check_delete_user" value="Удалить пользователя"
                type="submit" class="delete"/><?php
            if(@$_POST['check_delete_user'])
            {?>
                <div class="warning">Вы точно уверены, что хотите <b>удалить</b> этого пользователя?</div>
                <input name="delete_user" id="delete_user" value="Таки да, удалить!"
                    type="submit" class="delete"/><?php
            }
        }?>
        </form><?php
    }

    /**
      * @param $u operator (user)
      * @return array of (error, warning, notice) messages
      **/
    function xcmst_create_user($u)
    {
        $login = xcms_get_key_or($_POST, "login");
        $password = xcms_get_key_or($_POST, "password");
        if ($password != xcms_get_key_or($_POST, "password_confirm"))
            return array("Пароли не совпадают. ", null, null);

        if (!strlen($password))
            $password = xcms_mkpasswd();

        $email = xcms_get_key_or($_POST, "email");
        $name = xcms_get_key_or($_POST, "name");
        try
        {
            $tu = $u->create($login, $email);
            $tu->passwd($password);
            $tu->set_param("name", $name);
            foreach (xcms_all_groups() as $group=>$title)
            {
                if (@$_POST["group_$group"])
                    $u->add_to_group($login, $group);
            }
        }
        catch (Exception $e)
        {
            return array($e->getMessage(), null, null);
        }
        $warn = null;
        if (@$_POST["notify_user"])
            $warn = xcms_user_create_notify($email, $login, $password, $name);

        return array(null, $warn, "Пользователь '$login' успешно создан. ");
    }


    /**
      * @param $u operator (user)
      * @param $target_user target user name to update
      * @return array of (error, warning, notice) messages
      **/
    function xcmst_update_user($u, $target_user)
    {
        try {
            $user = $u->su($target_user);
            foreach (array("name", "email") as $field)
                $user->set_param($field, xcms_get_key_or($_POST, $field));

            foreach (xcms_all_groups() as $group=>$title)
            {
                if (@$_POST["group_$group"])
                    $u->add_to_group($user->login(), $group);
                else
                    $u->remove_from_group($user->login(), $group);
            }
        }
        catch (Exception $e)
        {
            return array($e->getMessage(), null, null);
        }
        return array(null, null, "Пользователь обновлён. ");
    }

    /**
      * @param $u operator (user)
      * @param $target_user target user name to delete
      * @return array of (error, warning, notice) messages
      **/
    function xcmst_delete_user($u, $target_user)
    {
        try
        {
            $user = $u->su($target_user);
            $u->delete($user->login());
        }
        catch (Exception $e)
        {
            return array($e->getMessage(), null, null);
        }
        return array(null, null, "Пользователь удалён. ");
    }

    /**
      * Draws main user operations panel
      * @param $u operator (user)
      * @param $target_user target user name
      * @param $messages array with error, warning and notice messages or null
      **/
    function xcmst_draw_user_forms($u, $target_user, $messages = null)
    {?>
        <div>
            <?php xcmst_draw_user_list($u, $target_user); ?>
        </div>
        <div class="user-ops"><?php
        if ($messages !== null)
        {
            if ($messages[0])
            {?>
                <div class="error"><?php echo $messages[0]; ?></div><?php
            }
            if ($messages[1])
            {?>
                <div class="warning"><?php echo $messages[1]; ?></div><?php
            }
            if ($messages[2])
            {?>
                <div class="notice"><?php echo $messages[2]; ?></div><?php
            }
        }
        if (@$_GET["action"] == "create_user" ||
            @$_POST["create_user"] && $messages !== null && ($messages[0] || $messages[1]) )
        {
            xcmst_draw_user_create_form();
        }
        elseif (@$_POST["create_user"])
        {
            xcmst_draw_user_modify_form($u, $target_user);
        }
        else
            xcmst_draw_user_modify_form($u, $target_user);
        ?>
        </div><!-- right column -->
        <?php
    }
?>

<div class="admin-widget user-manage">
    <h3>Администрирование пользователей</h3><?php
    if (@$_POST["create_user"])
    {
        $messages = xcmst_create_user($u);
        xcmst_draw_user_forms($u, $target_user, $messages);
    }
    elseif (@$_POST["update_user"])
    {
        $messages = xcmst_update_user($u, $target_user);
        xcmst_draw_user_forms($u, $target_user, $messages);
    }
    elseif (@$_POST["delete_user"])
    {
        $messages = xcmst_delete_user($u, $target_user);
        xcmst_draw_user_forms($u, "", $messages);
    }
    else
        xcmst_draw_user_forms($u, $target_user);
?>
</div><!-- floating-box->
