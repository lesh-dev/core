<?php
    require_once("$engine_dir/sys/db.php");

    /**
      * Replace \n by <br /> with respect to various systems line endings
      **/
    function xcms_html_wrap_by_crlf($sHTML)
    {
        // detect UNIX or DOS line-endings
        if (strpos($sHTML, "\n") !== false)
        {
            // Unix or DOS, so \n -> <br />, '\r' -> void
            $sHTML = str_replace("\n", "<br />", $sHTML);
            $sHTML = str_replace("\r", "", $sHTML);
        }
        elseif (strpos($sHTML, "\r") !== false)
        {
            // MacOS, \r only
            $sHTML = str_replace("\r", "<br />", $sHTML);
        }
        return $sHTML;
    }

    /**
      * Prepend one <br /> when HTML code already contains some
      **/
    function xcms_html_wrap_ml($sHTML)
    {
        if (strpos($sHTML, "<br />")) $sHTML = "<br />$sHTML";
        return $sHTML;
    }

    function xsm_prepare_social_profile($social_profile)
    {
        // make it valid URL if it was it form example.com/name
        if (!empty($social_profile) &&
            strpos(substr($social_profile, 0, 8), '://') === false) // http/https scheme not matched
            $social_profile = "http://$social_profile"; // assume http scheme
        $social_profile = htmlspecialchars($social_profile);
        return $social_profile;
    }

    function xsm_update_entity($entity, $table_name, $title, $fields, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $redir = ($id == 'new') ? "$entity$aux_param" : "$entity$aux_param#$table_name$id";
        $res = xdb_insert_or_update($table_name, array($key_name=>$id), $_POST, $fields);
        if ($res)
        {?>
            <p><?php echo $title; ?> успешно сохранён.<?php
        }
        else
        {?>
            <p>Не удалось добавить <?php echo $title; ?>.<?php
        }?>
        <a href="view-<?php echo $redir; ?>">Вернуться к просмотру</a></p><?php
    }

    function xsm_update_entity_listmode($entity, $table_name, $title, $fields, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $res = xdb_insert_or_update($table_name, array($key_name=>$id), $_POST, $fields);
        if ($res)
        {
            $id = $res;
            ?>
            <p><?php echo $title; ?> успешно сохранён.<?php
        }
        else
        {?>
            <p>Не удалось добавить <?php echo $title; ?>.<?php
        }
        $redir = "$entity$aux_param&amp;$key_name=$id";
        ?>
        <a href="view-<?php echo $redir; ?>">Вернуться к просмотру</a></p><?php
    }

    function xsm_warn_delete_entity($entity, $table_name, $title, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $redir = ($id == 'new') ? "$entity$aux_param" : "$entity$aux_param#$table_name$id"; ?>
        <div style="font-size: 12pt; font-weight: bold; color: #ff0000;">
            Вы действительно хотите удалить
            <?php echo $title; ?> [<?php echo $id; ?>]?<br />
            Связанные с ним объекты также будут удалены,
            а восстановление будет невозможно!</div>
        <div><form method="post" action="edit-<?php echo "$entity$aux_param"; ?>">
            <input type="hidden" name="<?php echo $key_name; ?>" value="<?php echo $id; ?>" />
            <input type="submit" name="confirm-delete-<?php echo $entity; ?>"
                value="Таки да, удалить!" class="delete-button"/>
            <a class="linkButton xsm"
                href="view-<?php echo $redir ?>">Вернуться к просмотру</a>
        </form></div>
        <?php
    }

    function xsm_warn_delete_listmode_entity($entity, $table_name, $title, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $redir = ($id == 'new') ? "$entity$aux_param" : "$entity$aux_param&amp;$key_name=$id"; ?>
        <div style="font-size: 12pt; font-weight: bold; color: #ff0000;">
            Вы действительно хотите удалить
            <?php echo $title; ?> [<?php echo $id; ?>]?<br />
            Связанные с ним объекты также будут удалены,
            а восстановление будет невозможно!</div>
        <div><form method="post" action="edit-<?php echo "$entity$aux_param"; ?>">
            <input type="hidden" name="<?php echo $key_name; ?>" value="<?php echo $id; ?>" />
            <input type="submit" name="confirm-delete-<?php echo $entity; ?>"
                value="Таки да, удалить!" class="delete-button"/>
            <a class="linkButton xsm"
                href="view-<?php echo $redir ?>">Вернуться к просмотру</a>
        </form></div>
        <?php
    }


    function xsm_delete_entity($entity, $table_name, $title, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $redir = ($id == 'new') ? "$entity$aux_param" : "$entity$aux_param#$table_name$id";
        $res = xdb_delete($table_name, $id);
        if ($res)
        {?>
            <p><?php echo $title; ?> [<?php echo $id; ?>] удалён успешно.<?php
        }
        else
        {?>
            <p>Не удалось удалить <?php echo $title; ?> [<?php echo $id; ?>] (возможно, есть связанные объекты).<?php
        }?>
        <a href="view-<?php echo $redir ?>">Вернуться к просмотру</a></p><?php
    }

    function xsm_delete_listmode_entity($entity, $table_name, $title, $aux_param = '')
    {
        $key_name = "${table_name}_id";
        $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
        $redir = ($id == 'new') ? "$entity$aux_param" : "$entity$aux_param#$table_name$id";
        $res = xdb_delete($table_name, $id);
        if ($res)
        {?>
            <p><?php echo $title; ?> [<?php echo $id; ?>] удалён успешно.<?php
        }
        else
        {?>
            <p>Не удалось удалить <?php echo $title; ?> [<?php echo $id; ?>] (возможно, есть связанные объекты).<?php
        }?>
        <a href="list-<?php echo $redir ?>">Вернуться к просмотру</a></p><?php
    }

    function xsm_make_selector($table_name, $name, $current_key, $title_keys, $aux_cond = '', $attr = '')
    {
        $db = xdb_get();
        $query = "SELECT * FROM $table_name";
        if (strlen($aux_cond))
            $query .= " WHERE $aux_cond";
        $sel = $db->query($query);
        $sHTML = "<select name=\"$name\" $attr>";
        $list_key = "${table_name}_id";
        while ($object = $sel->fetchArray(SQLITE3_ASSOC))
        {
            $title = "";
            foreach ($title_keys as $key_name)
                $title .= $object[$key_name].' ';
            $title = htmlspecialchars(trim($title));
            $key = $object[$list_key];
            $selected = ($key == $current_key) ? 'selected="selected"' : '';
            $sHTML .= "<option $selected value=\"$key\">$title</option>";
        }
        $sHTML .= "</select>";
        $db->close();
        return $sHTML;
    }

    function xsm_make_selector_ext($table_name, $name, $current_key, $title_keys, $query, $attr = '')
    {
        $db = xdb_get();
        $sel = $db->query($query);
        $sHTML = "<select name=\"$name\" $attr>";
        $list_key = "${table_name}_id";
        while ($object = $sel->fetchArray(SQLITE3_ASSOC))
        {
            $title = "";
            foreach ($title_keys as $key_name)
                $title .= $object[$key_name].' ';
            $title = htmlspecialchars(trim($title));
            $key = $object[$list_key];
            $selected = ($key == $current_key) ? 'selected="selected"' : '';
            $sHTML .= "<option $selected value=\"$key\">$title</option>";
        }
        $sHTML .= "</select>";
        $db->close();
        return $sHTML;
    }


    // Here entity should be equal to table name, but...
    function xsm_edit_operations($entity, $table_name, $id, $title, $aux_param = '')
    {
        $is_new = ($id == 'new');
        $redir = $is_new ? "$entity$aux_param" : "$entity$aux_param#$table_name$id";
        ?>
        <div style="white-space: nowrap">
            <input type="submit" name="update-<?php echo $entity; ?>"
                value="Сохранить" style="margin-left: 0px; margin-top: 5px;" /><?php
            if (!$is_new) {?>
                <input type="submit" name="delete-<?php echo $entity; ?>"
                    value="Удалить" class="delete-button"/><?php
            }?>
            <a class="linkButton xsm" href="view-<?php
                echo $redir; ?>"><?php echo $title; ?></a>
        </div><?php
    }

    // Kosher function for person
    function NEW_xsm_edit_operations($table_name, $id, $title, $aux_param = '')
    {
        $is_new = ($id == 'new');
        // TODO: маленький костылик
        $redir = $is_new ? "list-select" : "view-$table_name$aux_param&amp;${table_name}_id=$id";
        ?>
        <div style="white-space: nowrap">
            <input type="submit" name="update-<?php echo $table_name; ?>"
                value="Сохранить" style="margin-left: 0px; margin-top: 5px;" /><?php
            if (!$is_new) {?>
                <input type="submit" name="delete-<?php echo $table_name; ?>"
                    value="Удалить" class="delete-button"/><?php
            }?>
            <a class="linkButton xsm" href="<?php echo $redir; ?>"><?php echo $title; ?></a>
        </div><?php
    }


    function xsm_edit_operations_listmode($entity, $id, $title, $aux_param = '')
    {
        $is_new = ($id == 'new');
        $redir = $is_new ? "$entity$aux_param" : "$entity$aux_param#$entity$id";
        ?>
        <div style="white-space: nowrap">
            <input type="submit" name="update-<?php echo $entity; ?>"
                value="Сохранить" style="margin-left: 0px; margin-top: 5px;" /><?php
            if (!$is_new) {?>
                <input type="submit" name="delete-<?php echo $entity; ?>"
                    value="Удалить" class="delete-button"/><?php
            }?>
            <a class="linkButton xsm" href="list-<?php
                echo $redir; ?>"><?php echo $title; ?></a>
        </div><?php
    }

    // non-kosher function!
    // Here entity should be equal to table name, but...
    function xsm_view_operations($entity, $table_name, $title, $aux_param = '')
    {?>
        <div style="white-space: nowrap">
            <a class="linkButton xsm" href="edit-<?php
                echo "$entity$aux_param&amp;${table_name}_id=new"; ?>">Добавить <?php echo $title; ?></a>
        </div><?php
    }

    // kosher function
    function NEW_xsm_view_operations($table_name, $title, $aux_param = '')
    {?>
        <div style="white-space: nowrap">
            <a class="linkButton xsm" href="edit-<?php
                echo "$table_name$aux_param&amp;${table_name}_id=new"; ?>">Добавить <?php echo $title; ?></a>
        </div><?php
    }


    // Here entity should be equal to table name, but...
    function xsm_edit_delete_info($entity, $table_name, $id, $created, $modified, $aux_param = '')
    {?>
        <a class="link-oper" href="edit-<?php echo "$entity$aux_param&amp;${table_name}_id=$id" ?>"><img
            src="<# full_design_dir #>pic/edit.gif" class="edit-icon"
            title="Редактировать" />Правка</a>
        <span class="ankListField next">Создан</span>: <?php echo $created;
        if (!empty($modified)) {?>
            <span class="ankListField next">Отредактирован</span>: <?php echo $modified;
        }
    }

    // Kosher function
    function xsm_edit_link($table_name, $id, $aux_param = '', $custom_title = 'Правка')
    {?>
        <a href="edit-<?php
            echo "$table_name$aux_param&amp;${table_name}_id=$id" ?>"><img
            src="<# full_design_dir #>pic/edit.gif" class="edit-icon"
            title="Редактировать" /><?php echo $custom_title; ?></a><?php
    }


    function xsm_make_enum_selector($name, $value, $items)
    {
        $html = "<select name=\"$name\" id=\"$name-selector\">";
        foreach ($items as $key => $title)
        {
            $sel = ($key == $value) ? ' selected="selected" ' : '';
            $html .= "<option $sel value=\"$key\">$title</option>";
        }
        $html .= "</select>";
        return $html;
    }

    function xsm_get_person_school_id($db, $school_id, $person_id)
    {
        $ps_sel = $db->query(
            "SELECT
            ps.person_school_id
            FROM person_school ps WHERE
            (ps.member_person_id = $person_id) AND
            (ps.school_id = $school_id)"
        );

        // TODO: fix this, insert count check
        if (!($ps_data = $ps_sel->fetchArray(SQLITE3_ASSOC)))
            return NULL;

        return $ps_data['person_school_id'];
    }

    function xsm_make_checkbox($name, $value, $checked_value)
    {
        if (strlen($value)) $checked = 'checked="checked"';
        else $checked = '';
        // prepend fake input with empty value to submit it as checkbox 'unchecked' value
        // See http://iamcam.wordpress.com/2008/01/15/unchecked-checkbox-values/
        $sHTML =
            "<input type=\"hidden\" name=\"$name\" value=\"\"/>".
            "<input class=\"ankEdit checkbox\" type=\"checkbox\" name=\"$name\" ".
                "id=\"$name-checkbox\" value=\"$checked_value\" $checked />";
        return $sHTML;
    }
?>