<# cms/ank/diff #>
<?php

function xsm_edit_exam_operations($school_id, $student_person_id, $id, $place)
{
    $is_new = ($id == XDB_NEW);
    $table_name = "exam";
    $ret_title = "Вернуться к просмотру участника";
    $redir = "view-person".xcms_url(array('school_id'=>$school_id, 'person_id'=>$student_person_id));
    xsm_edit_ops($table_name, $is_new, $redir, $place, $ret_title);
}

/**
  * Специфическая функция: возврат происходит совсем в другую таблицу, нежели редактируемая сущность
  * TODO: Сделать более генерический update, чтобы можно было гибко обрабатывать и такие случаи тоже
  **/
function xsm_update_exam($table_name, $title, $fields)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
    $res = xdb_insert_or_update($table_name, array($key_name=>$id), $_POST, $fields);
    if ($res)
    {
        $id = $res;
        ?>
        <p><?php echo $title; ?> успешно сохранён.<?php
    }
    else
    {?>
        <p>Не удалось добавить <?php echo $title; ?>.<?php
    }
    $person_id = xcms_get_key_or($_POST, 'student_person_id', -1);
    $school_id = xcms_get_key_or($_POST, 'school_id', -1);
    $redir = "view-person".xcms_url(array('person_id'=>$person_id, 'school_id'=>$school_id));
    ?>
    <a href="<?php echo $redir; ?>">Вернуться к просмотру участника</a></p><?php
}

/* Ещё одна специфическая функция -- возврат на редактирование, а не на просмотр,
т.к. просмотра отдельно не существует) */
function xsm_warn_delete_exam($table_name, $title)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
    $redir = $table_name.xcms_url(array($key_name=>$id));
    xsm_warn_delete_ops($table_name, $key_name, $id, $redir, "зачёт");
}

function xsm_delete_exam($table_name, $title)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
    $exam = xdb_get_entity_by_id($table_name, $id);
    $person_id = $exam['student_person_id'];
    $course_id = $exam['course_id'];
    $course = xdb_get_entity_by_id("course", $course_id);
    $school_id = $course['school_id'];
    $redir = "view-person".xcms_url(array('person_id'=>$person_id, 'school_id'=>$school_id));
    $res = xdb_delete($table_name, $id);
    if ($res)
    {?>
        <p><?php echo $title; ?> [<?php echo $id; ?>] удалён успешно.<?php
    }
    else
    {?>
        <p>Не удалось удалить <?php echo $title; ?> [<?php echo $id; ?>] (возможно, есть связанные объекты).<?php
    }?>
    <a href="<?php echo $redir ?>">Вернуться к просмотру участника</a></p><?php
}

/**
  * @param $name имя идентификатора объекта (курса)
  * @param $value значение идентификатора объекта (курса)
  * @param $db хэндл базы данных
  * @param $school_id идентификатор школы
  **/
function xsm_make_course_selector($name, $value, $db, $school_id)
{
    $courses = xsm_get_all_course_info($db, $school_id);
    $html = "<select name=\"$name\" id=\"$name-selector\">\n";
    foreach ($courses as $key => $course)
    {
        $sel = ($key == $value) ? ' selected="selected" ' : '';
        $title = htmlspecialchars($course['course_title']);
        $title .= " &#8212; ";
        $next = false;
        foreach ($course['teachers'] as $course_teacher_id => $person)
        {
            if ($next)
                $title .= ', ';
            $title .= xsm_fi($person);
            $next = true;
        }
        $html .= "<option $sel value=\"$key\">$title</option>\n";
    }
    $html .= "</select>";
    return $html;
}

function xsm_notify_exam_edit($exam)
{
    $exam_id = $exam['exam_id'];
    $old_exam = ($exam_id != XDB_NEW) ? xdb_get_entity_by_id('exam', $exam_id) : array();

    $exam_status = xsm_check_enum_key('exam_status', $exam['exam_status']);
    $student_person_id = $exam['student_person_id'];
    $student = xdb_get_entity_by_id('person', $student_person_id);

    $course_id = $exam['course_id'];
    $course = xdb_get_entity_by_id('course', $course_id);
    $course_title = $course['course_title'];

    $student_fi = xsm_fi($student);
    $exam_statuses = xsm_get_enum("exam_status");
    $hr_exam_status = $exam_statuses[$exam_status];

    $table_title = 'Изменён зачёт школьника <a'.
        xsm_ext_href('view-person', array('person_id'=>$student_person_id)).'>'.
        htmlspecialchars($student_fi).'</a> по курсу <a'.
        xsm_ext_href('view-course', array('course_id'=>$course_id)).'>'.
        htmlspecialchars($course_title)."</a> [$hr_exam_status]";

    $mail_msg = xsm_build_diff_msg(
        $exam,
        $old_exam,
        xsm_get_exam_fields(),
        xsm_get_exam_field_types(),
        $table_title);

    xcms_send_notification("reg", NULL, $mail_msg);
}

function xsm_edit_exam()
{
    $exam_id = xcms_get_key_or($_GET, 'exam_id', '-1'); // invalid key
    $exam = xdb_get_entity_by_id('exam', $exam_id);
    $db = xdb_get();
    $course = array();
    $student = array();
    if ($exam_id == XDB_NEW)
    {
        // prefill student person
        $student_person_id = xcms_get_key_or($_GET, 'student_person_id', '-1');
        if ($student_person_id == "-1")
        {
            echo "Недопустимый ID участника. ";
            return;
        }
        $student = xdb_get_entity_by_id('person', $student_person_id);
        $school_id = xcms_get_key_or($_GET, 'school_id', '-1');
    }
    else
    {
        $student_person_id = $exam['student_person_id'];
        $student = xdb_get_entity_by_id('person', $student_person_id);
        $course_id = $exam['course_id'];
        $course = xdb_get_entity_by_id('course', $course_id);
        $school_id = $course['school_id'];
    }
    $school = xdb_get_entity_by_id('school', $school_id);
    $school_title = $school['school_title'];

    $exam_fields = xsm_get_exam_fields();
    $field_types = xsm_get_exam_field_types();

    ?>
    <form method="post" action="edit-exam"><?php
        xsm_edit_exam_operations($school_id, $student_person_id, $exam_id, "top");
        ?>
        <input type="hidden" name="exam_id" value="<?php echo $exam_id; ?>" />
        <input type="hidden" name="student_person_id" value="<?php echo $student_person_id; ?>" />
        <input type="hidden" name="school_id" value="<?php echo $school_id; ?>" /><?php
        if ($exam_id != XDB_NEW) {?>
            <input type="hidden" name="course_id" value="<?php echo $course_id; ?>" /><?php
        }?>
        <table class="ankEdit">
            <tr>
                <td class="ankListRowTitle">Зачёт</td>
            </tr>
            <tr><td class="ankList">
                <span class="ankEditField">Школа</span>
                <input type="text" class="ankEdit" value="<?php
                    echo htmlspecialchars($school_title); ?>"
                    readonly="readonly" />
            </td></tr>
            <?php
            foreach ($exam_fields as $key=>$field_title)
            {
                $value = xcms_get_key_or($exam, $key);
                $attr = "";
                // handle readonly fields
                if ($key == "exam_created" ||
                    $key == "exam_modified") $attr = ' readonly="readonly"'?>
                <tr><td class="ankList"><span class="ankEditField"><?php echo $exam_fields[$key]; ?></span>
                <?php
                $ft = xcms_get_key_or($field_types, $key);
                if ($ft == "textarea") {?>
                    <textarea class="ankEdit" name="<?php echo $key; ?>"
                        id="<?php echo $key;?>-text"><?php
                        echo htmlspecialchars($value); ?></textarea><?php
                } elseif ($ft == "checkbox") {
                    // КОСТЫЛЬ! checkbox-овое поле должно начинаться со слова 'is_'
                    // и его "установленное" значение (true) соответствует
                    // остатку названия ключа без префикса 'is_'
                    echo xsm_make_checkbox($key, $value, substr($key, 3));
                } elseif ($ft == "enum") {
                    echo xsm_make_enum_by_type($key, $value, $key);
                } elseif ($key == 'student_person_id')
                {?>
                    <input type="text" class="ankEdit" value="<?php
                        echo htmlspecialchars(xsm_fi($student)); ?>"
                        readonly="readonly" /><?php
                } elseif ($key == 'course_id') {
                    if ($exam_id == XDB_NEW)
                        echo xsm_make_course_selector('course_id', xcms_get_key_or($exam, $key, "-1"), $db, $school_id);
                    else
                    {
                        $teachers_ht = xsm_get_course_teachers($db, $course_id, $school_id, "all");
                        echo "$teachers_ht &#8212; ".htmlspecialchars($course['course_title']);
                    }
                }
                else {?><input type="text" class="ankEdit" value="<?php echo htmlspecialchars($value); ?>"
                        name="<?php echo $key; ?>" id="<?php echo $key; ?>-input" <?php echo $attr; ?> /><?php
                } ?>
                </td></tr>
                <?php
            }?>
        </table><?php
        xsm_edit_exam_operations($school_id, $student_person_id, $exam_id, "bottom"); ?>
    </form>
    <?php
}

if (@$_POST["update-exam"])
{
    xsm_notify_exam_edit($_POST);
    xsm_update_exam('exam', 'Зачёт', xsm_get_exam_fields());
}
elseif (@$_POST["delete-exam"])
{
    xsm_warn_delete_exam('exam', 'зачёт');
}
elseif (@$_POST["confirm-delete-exam"])
{
    xsm_delete_exam('exam', 'Зачёт');
}
else
    xsm_edit_exam();
?>
