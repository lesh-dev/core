<?php
require_once("${engine_dir}xsm/diff.php");
require_once("${engine_dir}cms/ank/edit-format.php");
require_once("${engine_dir}cms/ank/course_teacher.php");

function xsm_edit_exam_operations($school_id, $student_person_id, $id)
{
    $is_new = ($id == XDB_NEW);
    $table_name = "exam";
    $ret_title = "Вернуться к просмотру участника";
    $redir = "view-person".xcms_url(array('school_id' => $school_id, 'person_id' => $student_person_id));
    xsm_edit_ops($table_name, $is_new, $redir, $ret_title);
}

/**
  * Получение exam_id по person_id и course_id
  * @return exam_id (или NULL)
  **/
function xsm_get_exam_id($db, $course_id, $person_id)
{
    $exam_sel = $db->query(
        "SELECT
        e.exam_id
        FROM exam e WHERE
        (e.student_person_id = $person_id) AND
        (e.course_id = $course_id)"
    );

    if (!($exam_data = $exam_sel->fetchArray(SQLITE3_ASSOC)))
        return NULL;

    return $exam_data['exam_id'];
}

/**
  * Специфическая функция: возврат происходит совсем в другую таблицу, нежели редактируемая сущность
  * TODO: Сделать более генерический update, чтобы можно было гибко обрабатывать и такие случаи тоже
  **/
function xsm_update_exam($table_name, $title, $fields)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key

    $person_id = $_POST['student_person_id'];
    $course_id = $_POST['course_id'];
    $db = xdb_get();
    $exam_id = xsm_get_exam_id($db, $course_id, $person_id);

    if ($id == XDB_NEW && $exam_id !== NULL)
    {?>
        <p>Зачёт по этому курсу уже имеется. <?php
    }
    else
    {
        $res = xdb_insert_or_update($table_name, array($key_name => $id), $_POST, $fields);
        if ($res)
        {
            $id = $res;
            ?>
            <p><?php echo $title; ?> успешно сохранён. <?php
        }
        else
        {?>
            <p>Не удалось добавить <?php echo $title; ?>.<?php
        }
    }
    $school_id = xcms_get_key_or($_POST, 'school_id', -1);
    echo xsm_person_view_link($person_id, $school_id, "Вернуться к просмотру участника");
    ?></p><?php
}

/* Ещё одна специфическая функция -- возврат на редактирование, а не на просмотр,
т.к. просмотра отдельно не существует) */
function xsm_warn_delete_exam($table_name, $title)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
    $redir = $table_name.xcms_url(array($key_name => $id));
    xsm_warn_delete_ops($table_name, $key_name, $id, $redir, "зачёт");
}

function xsm_delete_exam($table_name, $title)
{
    $key_name = "${table_name}_id";
    $id = xcms_get_key_or($_POST, $key_name, 'invalid'); // invalid key
    $exam = xdb_get_entity_by_id($table_name, $id);
    $person_id = $exam['student_person_id'];
    $course_id = $exam['course_id'];
    $course = xdb_get_entity_by_id("course", $course_id);
    $school_id = $course['school_id'];
    $redir = "view-person".xcms_url(array('person_id' => $person_id, 'school_id' => $school_id));
    $res = xdb_delete($table_name, $id);
    if ($res)
    {?>
        <p><?php echo $title; ?> [<?php echo $id; ?>] удалён успешно.<?php
    }
    else
    {?>
        <p>Не удалось удалить <?php echo $title; ?> [<?php echo $id; ?>] (возможно, есть связанные объекты).<?php
    }?>
    <a href="<?php echo $redir ?>">Вернуться к просмотру участника</a></p><?php
}

/**
  * @param $name имя идентификатора объекта (курса)
  * @param $value значение идентификатора объекта (курса)
  * @param $db хэндл базы данных
  * @param $school_id идентификатор школы
  **/
function xsm_make_course_selector($name, $value, $db, $school_id)
{
    $courses = xsm_get_all_course_info($db, $school_id);
    $html = "<select name=\"$name\" id=\"$name-selector\">\n";
    foreach ($courses as $key => $course)
    {
        $selected = xcms_enum_selected($key, $value);
        $title = xcms_get_key_or_enc($course, 'course_title');
        $title .= " &#8212; ";
        $next = false;
        foreach ($course['teachers'] as $course_teacher_id => $person)
        {
            if ($next)
                $title .= ', ';
            $title .= xsm_fi($person);
            $next = true;
        }
        $html .= "<option $selected value=\"$key\">$title</option>\n";
    }
    $html .= "</select>";
    return $html;
}

function xsm_notify_exam_edit($exam)
{
    $exam_id = $exam['exam_id'];
    $old_exam = ($exam_id != XDB_NEW) ? xdb_get_entity_by_id('exam', $exam_id) : array();

    $exam_status = xsm_check_enum_key('exam_status', $exam['exam_status']);
    $student_person_id = $exam['student_person_id'];
    $student = xdb_get_entity_by_id('person', $student_person_id);

    $course_id = $exam['course_id'];
    $course = xdb_get_entity_by_id('course', $course_id);
    $course_title = $course['course_title'];

    $student_fi = xsm_fi($student);
    $exam_statuses = xsm_get_enum("exam_status");
    $hr_exam_status = $exam_statuses[$exam_status];

    $table_title = 'Изменён зачёт школьника <a'.
        xsm_ext_href('view-person', array('person_id' => $student_person_id)).'>'.
        htmlspecialchars($student_fi).'</a> по курсу <a'.
        xsm_ext_href('view-course', array('course_id' => $course_id)).'>'.
        htmlspecialchars($course_title)."</a> [$hr_exam_status]";

    $mail_msg = xsm_build_diff_msg(
        $exam,
        $old_exam,
        'exam',
        xsm_get_fields("exam"),
        $table_title);

    xcms_send_notification("reg", NULL, $mail_msg);
}

function xsm_edit_exam()
{
    $exam_id = xdb_get_idvar('exam_id');
    $exam = xdb_get_entity_by_id('exam', $exam_id);
    $db = xdb_get();
    $course = array();
    $student = array();
    if ($exam_id == XDB_NEW)
    {
        // prefill student person
        $student_person_id = xdb_get_idvar('student_person_id');
        // TODO(mvel): Provide generic assertions here.
        if ($student_person_id == XDB_INVALID_ID)
        {
            echo "Недопустимый ID участника. ";
            return;
        }
        $student = xdb_get_entity_by_id('person', $student_person_id);
        $school_id = xdb_get_idvar('school_id');
    }
    else
    {
        $student_person_id = $exam['student_person_id'];
        $student = xdb_get_entity_by_id('person', $student_person_id);
        $course_id = $exam['course_id'];
        $course = xdb_get_entity_by_id('course', $course_id);
        $school_id = $course['school_id'];
    }
    $person_list_link = xsm_person_list_link($school_id);
    $fields_desc = xsm_get_fields("exam");
    ?>
    <form method="post" action="edit-exam"><?php
        xsm_edit_exam_operations($school_id, $student_person_id, $exam_id, "top");
        xcmst_hidden("exam_id", $exam_id);
        xcmst_hidden("student_person_id", $student_person_id);
        xcmst_hidden("school_id", $school_id);
        if ($exam_id != XDB_NEW)
            xcmst_hidden("course_id", $course_id); ?>
        <table class="ankEdit table table-bordered table-hover table-condensed">
            <tr>
                <td class="ankListRowTitle">Зачёт на <?php echo $person_list_link; ?></td>
            </tr>
            <?php
            foreach ($fields_desc as $key => $desc)
            {
                if (xsm_draw_generic_fields_begin($desc, $exam, $key))
                    continue;
                if ($key == 'student_person_id')
                    xsm_draw_field_unnamed_input($desc, xsm_fi($student));
                elseif ($key == 'course_id') {
                    if ($exam_id == XDB_NEW)
                        echo xsm_make_course_selector('course_id', xcms_get_key_or($exam, $key, XDB_INVALID_ID), $db, $school_id);
                    else
                    {
                        $teachers_ht = xsm_get_course_teachers($db, $course_id, $school_id);
                        echo "$teachers_ht &#8212; ".xcms_get_key_or_enc($course, 'course_title');
                    }
                }
                xsm_draw_generic_fields_end();
            }?>
        </table><?php
        xsm_bottom_fields('exam', $exam);
        xsm_edit_exam_operations($school_id, $student_person_id, $exam_id, "bottom"); ?>
    </form>
    <?php
}

if (@$_POST["update-exam"])
{
    xsm_notify_exam_edit($_POST);
    xsm_update_exam('exam', 'Зачёт', xsm_get_fields("exam"));
}
elseif (@$_POST["delete-exam"])
{
    xsm_warn_delete_exam('exam', 'зачёт');
}
elseif (@$_POST["confirm-delete-exam"])
{
    xsm_delete_exam('exam', 'Зачёт');
}
else
    xsm_edit_exam();
?>
