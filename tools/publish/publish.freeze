#!/bin/bash -e
cat <<EOF
 === CONTENT FREEZE ===
 You're about to make site content frozen. This means:
  1) All site content will become read-only
  2) Any user input will be rejected
  3) All manual site changes will be re-written during next production procedure
  4) All content will be moved into 'frozen' production directory
 Are uou sure you want to freeze website?
EOF
while true; do
    read -p "ARE YOU SURE, THAT ALL IS OK AND WANT TO CONTINUE? (y/n)" answer
    if [ $answer. == 'y.' ]; then
        break
    elif [ $answer. == 'n.' ]; then
        echo "Cancelled by user. Production site is untouched"
        exit 1
    fi
done

source $(dirname $0)/publish.conf
FROZEN=$CLONE_DIR/production.frozen-$TIMESTAMP
# mkdir $FROZEN
cp -rf $(readlink $PRODUCTION) $FROZEN
chown -R www-data:www-data $FROZEN
rm -rf $FROZEN/.prec/*
cd $FROZEN
mkdir frost
cp -rf content/* frost
rm content
chmod -R 555 frost
chown -R root:root frost
ln -s frost content
cat > INFO <<EOF
<b><font color="red">FROST</font></b>
R/O production copy
All changes will be rejected
EOF
rm $LAST_CHANCE
ln -s $FROZEN $LAST_CHANCE
apachectl -k graceful

cat <<EOF
=====================================================
              LAST CHANCE TO QUIT!!!
=====================================================
Now, take a brief look to website:

      http://last-chance.lesh-dev.dtdns.net

This is EXACT copy of the site you're going
to make a production instance.
EOF

while true; do
    read -p "Are you sure that EVERYTHING IS OK? Press Y to continue (y/n)" answer
    if [ $answer. == 'y.' ]; then
        rm $PRODUCTION
        ln -s $FROZEN $PRODUCTION
        apachectl -k graceful
        echo "Production frozen! Site is read only, all changes will be rejected."
        exit 0
    elif [ $answer. == 'n.' ]; then
        echo "Cancelled by user. Production site is untouched"
        exit 1
    fi
done

