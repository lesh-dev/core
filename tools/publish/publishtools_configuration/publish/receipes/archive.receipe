#!/bin/bash
# Generated from template on Mon Sep 17 22:16:36 MSK 2012
# Please don't forget to commit all changes to repo
components=""
target=/tmp/archive_target
branch=master
sympolicy=none

# This will be executed while publishing component begin
CLONE_DIR=/srv/www/clones
function hook_begin
{
    # stupid action to fix #661
    mkdir -p $target
}

# This will be executed while publishing component end
function hook_end
{

    echo "Archiving production copies..."

    for i in $CLONE_DIR/production.last-*; do
        if [ "$(readlink $CLONE_DIR/production)" == "$i" ]; then
            echo "Skipping real production: $i"
            continue
        fi
        if [ "$(readlink $CLONE_DIR/production_muted)" == "$i" ]; then
            echo "Skipping muted production: $i"
            continue
        fi
        if [ "$(readlink $CLONE_DIR/production.last)" == "$i" ]; then
            echo "Skipping 'last chance': $i"
            continue
        fi
        echo "Archiving $i ..."
        ARC_NAME="`basename $i`"
        DIR_NAME="`dirname $i`"
        tar czf "$DIR_NAME/arc-$ARC_NAME.tgz" "$i"
        rm -rf "$i"
    done

    echo "Archiving pre-production copies..."

    for i in $CLONE_DIR/preprod-*; do
        if [ "$(readlink $CLONE_DIR/preprod)" == "$i" ]; then
            echo "Skipping preprod: $i"
            continue
        fi
        echo "Archiving $i ..."
        ARC_NAME="`basename $i`"
        DIR_NAME="`dirname $i`"
        tar czf "$DIR_NAME/arc-$ARC_NAME.tgz" "$i"
        rm -rf "$i"
    done

    echo "Archiving frozen copies..."

    for i in $CLONE_DIR/freeze-*; do
        if [ "$(readlink $CLONE_DIR/production)" == "$i" ]; then
            echo "Skipping real production's frost: $i"
            continue
        fi
        if [ "$(readlink $CLONE_DIR/production_muted)" == "$i" ]; then
            echo "Skipping mute production's frost: $i"
            continue
        fi
        if [ "$(readlink $CLONE_DIR/freeze)" == "$i" ]; then
            echo "Skipping current frost: $i"
            continue
        fi
        echo "Archiving $i ..."
        ARC_NAME="`basename $i`"
        DIR_NAME="`dirname $i`"
        tar czf "$DIR_NAME/arc-$ARC_NAME.tgz" "$i"
        rm -rf "$i"
    done
}
