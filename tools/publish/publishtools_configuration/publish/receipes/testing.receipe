#!/usr/bin/env bash
# Generated from template on Tue Oct  9 22:33:23 MSK 2012
# Please don't forget to commit all changes to repo

if [ -z "$clone_root" ] ; then
    echo "Clones root is not set"
    exit 1
fi

components=" preprod_copy"
branch=master
target=$clone_root/testing
sympolicy=none

# This will be executed while publishing component begin
function hook_begin
{
    print_message "Removing '$target'...'"
    rm -rf $target
    echo "Preparing folder for XCMS engine logs"
    mkdir -p /var/log/xcms
    chown -R $owner:$owner /var/log/xcms
}

# This will be executed while publishing component preprod_copy
function hook_preprod_copy
{
    echo -en  # Add something useful if you want
}

# This will be executed while publishing component end
function hook_commit
{
    cd $target
    if [ $(pwd) != $target ]; then
        echo " *** ERROR *** Can't create save state"
    else
        print_message "Adding all files to Git to save state..."
        git add -A
        print_message "Saving state to Git..."
        git commit -am "Save state"
    fi
}

function hook_reset
{
    cd $target
    if [ $(pwd) != $target ]; then
        echo " *** ERROR *** Can't create save state"
    else
        git reset --hard
        git clean -f
        chown -R $owner:$owner .
    fi
}

# TODO: unhardcode fizlesh.sqlite name
function xsm_clear_notifications
{
    db="content/ank/fizlesh.sqlite3"
    if [ -w "$db" ] ; then
        echo 'DELETE FROM notification;' | sqlite3 "$db"
        echo "Notifications table cleared successfully"
    fi

    mc="content/cms/mailer.conf"
    if [ -w "$mc" ] ; then
        mail_test="vdm-photo@ya.ru"
        cat > "$mc" <<EOF
user-change:$mail_test
content-change:$mail_test
reg:$mail_test
reg-managers:$mail_test
EOF
        echo "Mailer config was reset to '$mail_test' address for each notification handler"
    fi

}

function hook_end
{
    cd $target
    if [ $(pwd) != $target ]; then
        echo " *** ERROR *** Can't create save state"
    else
        xsm_clear_notifications
        git init
        hook_commit
    fi
    # eliminate settings that may be obtained from production (#860)
    > settings.php
    chown $owner:$owner settings.php

    # create robots.txt to prevent indexing (#426)
    cat > robots.txt <<EOF
User-Agent: *
Disallow: /
EOF
    apachectl -k graceful
}
