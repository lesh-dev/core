* для обрубания переноса пользуйтесь CSS white-space: nowrap;

* убрать justify для узких колонок текста

* sans-serif -- это отдельное название шрифта, его надо писать через запятую, как и все остальные.

* не надо называть классы транслитом, лучше использовать английские названия. zagl -- плохое название,
  header -- хорошее, chapter -- хорошее, subheader -- тоже неплохо, даже title -- понятно. транслит допустим
  только в том случае, когда его английский аналог менее понятен (или аналогов нет)
  вот ты сможешь через две недели отрыва на курорте вспомнить, вернувшись к делам, что
  такое class="tch", про что он, про какой элемент страницы? А кто-нибудь, кто будет читать
  твою вёрстку? То-то же :) Название класса не должно быть очень длинным, но оно должно быть понятным.
  типичное хорошее название в 2-3 аглицких слова укладывается.

* Вот такой стиль недопустим: не надо вообще указывать li-шкам никакой ширины, он неминуемо разъедется.
<ul>
    <li style="width:80px"> <a href="">Фотоальбом</a></li>
    <li style="width:80px"><a href="aboutus.html">О нас пишут</a></li>
    <li style="width:50px"><a href="">Ссылки</a></li>
    <li style="width:45px"><a href="">Форум</a></li>
</ul>

Допустимо задать им ОДНУ ширину через класс, вот так:
# html
<ul>
    <li class="right-menu"> <a href="">Фотоальбом</a></li>
    <li class="right-menu"><a href="aboutus.html">О нас пишут</a></li>
    <li class="right-menu"><a href="">Ссылки</a></li>
    <li class="right-menu"><a href="">Форум</a></li>
</ul>
# css
li.right-menu {
    width: 80px;
}

* id="principles" используется на разных страницах, и потому смысл этого слова
потерялся окончательно. Названия классов должны отвечать СТРУКТУРЕ страницы,
независимо от её СОДЕРЖАНИЯ. То есть, они должны отражать, является ли данный
класс описанием заголовка, основного текста, выделения важных элементов,
и так далее. Хорошее название класса позволяет догадаться, как примерно
должен выглядеть CSS для него, даже не заглядывая в макет страницы.

Например, если страница визуально разбита на следующие блоки (примерно как у нас)
а) заголовок страницы
б) основной текст, узкой колонкой
в) боковой текст, тоже узкой колонкой
г) ещё текст снизу, по ширине страницы

то разумные названия стилей будут, например, такие:

page-header
leftcol-text
rightcol-text
rightcol-header
bottom-text
bottom-header

И ИХ ДОЛЖНО БЫТЬ НЕМНОГО! То есть эти 5-6 основных стилей должны кочевать
с одной страницы на другую и использоваться везде в неизменном виде.
Это необходимое условие того, чтобы все страницы выглядели одинаково.
У тебя это кое-где соблюдается, но, увы, не везде. Попробуй унифицировать.

* Не надо писать слово style. Вообще. Почти. Никогда. Всегда определяй класс и задавай в нём
все свойства, которые ты хочешь перечислить в style. Так ты будешь уверена в том, что на разных страницах
у тебя все стили будут ОДИНАКОВЫМИ, и никакой свистопляски не будет. Примеров масса, приводить не буду, см. код.

Это слово можно писать только в том случае, если ты делаешь шаблон страницы,
который заведомо неповторим (впрочем, даже в этом случае удобно, когда все цветовые
и прочие определения собраны в одном месте -- в CSS).

* Следи за отступами, паддингами и полями. Поля на всех страницах лучше задавать
одним правилом на всё, ширины отступов, высот строк -- тоже. Один и тот же элемент
может иметь несколько классов, через пробел. Если какое-то свойство из нескольких
правил надо задать многим разрозненным элементам, просто вынеси это определение
в отдельный класс и назови его по смыслу этого свойства.

Ну например, коричневый фон + правильный паддинг для него может быть выделен
в отдельный класс highlight, тогда будем писать как-то так
<p class="main-text highlight">какой-то текст, который напишет Алексей Брониславович</p>
Такую вёрстку крайне просто поддерживать и осмыслять.

А вот не очень удачный вариант такого совмещения:

#chronic1 a, #text a, #principles a, #res a{
    font-size: 14px;
    color: #4F4F4F;
}

Вместо 4 классов надо было придумать ОДИН класс и его прописать во все ссылки.
Станет в 4 раза понятнее и СТРУКТУРНЕЕ. Количество правил CSS влияет на
производительность, но самое главное для нас -- его сложно понимать и править.
Поэтому его нужно оптимизировать (возможно не на ходу, а потом). Это придёт
со временем. Я заметил: программисты делают хреновый дизайн, но у них получается
офигительный CSS в плане структуры, дизайнеры -- ровно наоборот: каша
в структуре, зато офигительный дизайн. Так вот, нужно, чтобы офигительным
было и то и другое :)

* Использование тегов b, strong, i, и прочих -- зло кромешное. Используйте стили.
Эти теги должны быть преданы огню.

А в остальном, прекрасная маркиза, всё очень и очень неплохо :)
Не судите строго мою критику, отнеситесь к ней с нежностью и пониманием.
Жду ваших вопросов.
